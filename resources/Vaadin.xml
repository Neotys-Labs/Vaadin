<?xml version="1.1" encoding="UTF-8" ?>
<!DOCTYPE framework [
	<!ELEMENT framework ((dynamic-parameters?), (request-definition*),(simplified-VU-class?))>
	<!ELEMENT dynamic-parameters (dynamic-parameter+)>
	<!ELEMENT dynamic-parameter (dp-request-injector*)>
	<!ELEMENT dp-request-injector (#PCDATA)>
	<!ELEMENT request-definition (detection-rules, merge-request-rules?, message-definition*, result-handler?)>
	<!ELEMENT detection-rules (rule)>
	<!ELEMENT merge-request-rules (rule)>
	<!ELEMENT result-handler (timestamp-extractor?)>
	<!ELEMENT timestamp-extractor (#PCDATA)>
	<!ELEMENT message-definition ((conditions?), (name-extractor?))>
	<!ELEMENT conditions (condition*)>
	<!ELEMENT condition (#PCDATA)>
	<!ELEMENT name-extractor (#PCDATA)>
	<!ELEMENT simplified-VU-class (#PCDATA)>
	<!ELEMENT rule (rule*)>
	
	<!ATTLIST framework
		name CDATA #REQUIRED
		type CDATA #IMPLIED
		isReadOnly CDATA #IMPLIED
		version CDATA #REQUIRED
		licenseID CDATA #IMPLIED
		state CDATA #REQUIRED 
		group-consecutive-push-requests CDATA #IMPLIED>

	<!ATTLIST dynamic-parameter
		name CDATA #REQUIRED
		enabled CDATA #IMPLIED 
		extractionSource CDATA #REQUIRED
		extractionMethod CDATA #REQUIRED
		xpath CDATA #IMPLIED
		regexp CDATA #REQUIRED
		template CDATA #REQUIRED>
	
	<!ATTLIST dp-request-injector
		type CDATA #REQUIRED
		injectionMethod CDATA #IMPLIED
		parameterName CDATA #IMPLIED
		xpath CDATA #IMPLIED
		regexp CDATA #IMPLIED
		groups CDATA #IMPLIED>
	
	<!ATTLIST request-definition
		pushType CDATA #REQUIRED
		network CDATA #IMPLIED 
		plugin CDATA #IMPLIED 
		streamingType CDATA #IMPLIED 
		classname CDATA #IMPLIED
		pollingMaxDeltaT CDATA #IMPLIED
		pollingDefaultDelay CDATA #IMPLIED>
		
	<!ATTLIST result-handler 
		type CDATA #IMPLIED 
		messageSplitterRegexp CDATA #IMPLIED
		messageSplitterRegexpGroup CDATA #IMPLIED
		responseSource CDATA #IMPLIED
		endOfPacket CDATA #IMPLIED>
	
	<!ATTLIST timestamp-extractor 
		regExp CDATA #REQUIRED
		template CDATA #REQUIRED 
		setDefaultValue CDATA #REQUIRED 
		defaultValue CDATA #REQUIRED
		assertionOnNoMatch CDATA #IMPLIED
		extractType CDATA #IMPLIED
		matchNumber CDATA #IMPLIED
		name CDATA #IMPLIED
		uid CDATA #IMPLIED
		valueHtmlEncoded CDATA #IMPLIED>
	
	<!ATTLIST message-definition
		messageType CDATA #REQUIRED>
	
	<!ATTLIST name-extractor
		regExp CDATA #REQUIRED
		template CDATA #REQUIRED
		setDefaultValue CDATA #REQUIRED 
		defaultValue CDATA #IMPLIED
		assertionOnNoMatch CDATA #IMPLIED
		extractType CDATA #IMPLIED
		matchNumber CDATA #IMPLIED
		name CDATA #IMPLIED
		uid CDATA #IMPLIED
		valueEncoded CDATA #IMPLIED
		valueHtmlEncoded CDATA #IMPLIED
		valueUrlEncoded CDATA #IMPLIED>
	
	<!ATTLIST rule
		type CDATA #REQUIRED
		operator CDATA #REQUIRED
		value CDATA #IMPLIED
		from CDATA #IMPLIED 
		header CDATA #IMPLIED
		parametername CDATA #IMPLIED>
	
	<!ATTLIST conditions
		match-type CDATA #IMPLIED>
	
	<!ATTLIST condition
		operand1 CDATA #REQUIRED
		operator CDATA #REQUIRED
		operand2 CDATA #REQUIRED>
		 
	<!ATTLIST name
		template CDATA #REQUIRED>
		 		
	<!ATTLIST simplified-VU-class
		classname CDATA #REQUIRED>
]>
<framework isReadOnly="false" name="Vaadin" signature="svNBOjWExX6HEJNB9ePbrc5rkKA=" state="SELECTED" uniqueID="1422294866673" version="5.0.2">
<dynamic-parameters>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="Vaadin_Key" regexp="Vaadin-Security-Key\\&quot;:\\&quot;(.*?)\\&quot;,\\&quot;changes" template="$1$">
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="crstoken" regexp="&lt;String&gt;Vaadin-Security-Key&lt;/String&gt;[^&lt;]+&lt;String&gt;(.*?)&lt;/String&gt;" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="v-csrfToken" type="PARAMETER_VALUE"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="Vapp-id" regexp="&lt;div id=&quot;(.*?)&quot; class=&quot; v-app " template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" type="PARAMETER_VALUE"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="SYNCID" regexp="String&gt;syncId&lt;/String&gt;[^&gt;]+&lt;int&gt;(.*?)&lt;/int&gt;" template="$1$">
<dp-request-injector groups="1" injectionMethod="REGEXP" regexp="&lt;String&gt;syncId&lt;/String&gt;[^&gt;]+&lt;int&gt;(.*?)&lt;/int&gt;" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="TackId" regexp="String&gt;X-Atmosphere-tracking-id&lt;/String&gt;[^&gt;]+&lt;String&gt;(.*?)&lt;/String&gt;" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="X-Atmosphere-tracking-id" type="PARAMETER_VALUE"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="X-Atmosphere-Framework" regexp="version:&quot;(.*?)&quot;" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="X-Atmosphere-Framework" type="PARAMETER_VALUE"/>
</dynamic-parameter>
<dynamic-parameter extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="v-uiId" regexp="&lt;String&gt;v-uiId&lt;/String&gt;[^&gt;]+&lt;int&gt;(\d+)&lt;/int&gt;" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="v-uiId" type="PARAMETER_VALUE"/>
</dynamic-parameter>
</dynamic-parameters>
<websocket enabled="true">
<request extractionMethod="XPATH_THEN_REGEXP" regexp="&lt;int&gt;(.*?)&lt;/int&gt;" template="$1$" xpath="com.neotys.codec.v215vaadin4.VaadinWSRequest/content/map/entry/int"/>
<response extractionMethod="XPATH_THEN_REGEXP" regexp="&lt;NLSyncId&gt;(\d+)&lt;/NLSyncId&gt;" template="$1$" xpath="com.neotys.codec.v215vaadin4.VaadinWSResponse/NLSyncId"/>
</websocket>
</framework>
